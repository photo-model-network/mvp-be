services:
  app:
    build: .
    image: my-pmn-image
    container_name: my-pmn-container
    command: /app/entrypoint.sh
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres
    container_name: my-postgres-container
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: "redis:alpine"
    container_name: my-redis-container
    command: redis-server --requirepass ${REDIS_PASSWORD}
    env_file:
      - .env
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    restart: unless-stopped
    volumes:
      - redis_data:/data

  celery:
    image: my-pmn-image
    container_name: my-celery-container
    command: celery -A config worker -E -l info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
      - app

  flower:
    image: my-pmn-image
    container_name: my-flower-container
    command: celery -A config.celery_app flower --basic_auth=${FLOWER_ADMIN}:${FLOWER_SECRET}
    ports:
      - "5555:5555"
    env_file:
      - .env
    depends_on:
      - redis

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.1
    container_name: my-elasticsearch-container
    env_file:
      - .env
    volumes:
      - es_data:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      # - xpack.security.http.ssl.enabled=false 테스트시 http 사용
    ports:
      - "9200:9200"
    restart: unless-stopped

  # 테스트용
  portainer:
    image: portainer/portainer-ce
    container_name: my-portainer-container
    command: -H unix:///var/run/docker.sock
    ports:
      - "9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  es_data: