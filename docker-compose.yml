services:
  app:
    build: .
    image: pmn-app-image
    container_name: pmn-app-container
    command: /app/entrypoint.sh
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres
    container_name: postgres-container
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: "redis:alpine"
    container_name: redis-container
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  celery:
    image: pmn-app-image
    container_name: celery-container
    command: celery -A config worker -E -l info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
      - app

  flower:
    image: pmn-app-image
    container_name: flower-container
    command: celery -A config.celery_app flower --basic_auth=${FLOWER_ADMIN}:${FLOWER_SECRET}
    env_file:
      - .env
    ports:
      - "5555:5555"
    depends_on:
      - redis

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - "9000:9000"
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  portainer_data:
